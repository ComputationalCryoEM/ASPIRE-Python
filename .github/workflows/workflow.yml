name: ASPIRE Python Pip CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:


jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install tox tox-gh-actions
    - name: Run Tox Check
      run: tox -e check

  data-cache:
    needs: check
    runs-on: ubuntu-latest
    outputs:
      cache_hash: ${{ steps.compute-cache-hash.outputs.cache_hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          key: cached-data-${{ hashFiles('**/registry.py', '**/*workflow.yml') }}
          restore-keys: |
            cached-data-
          path: .github_cache/ASPIRE-data
          enableCrossOsArchive: true
      - name: Create Cache Directory
        run: |
          # Create cache and config directories
          mkdir -p .github_cache/ASPIRE-data
          chmod -R 777 .github_cache/ASPIRE-data
          echo "cache:" > config.yaml
          echo "    cache_dir: .github_cache/ASPIRE-data" >> config.yaml
          echo "Logging config.yaml for verification:"
          cat config.yaml
      - name: Download Cache Files
        run: |
          export ASPIREDIR=.
          python -c "
          from aspire.downloader import emdb_2660, simulated_channelspin
          emdb_2660()
          simulated_channelspin()
          "
      - name: Compute Cache Directory Hash
        id: compute-cache-hash
        run: |
          echo "Computing hash for .github_cache/ASPIRE-data..."
          # Compute a hash on the sorted file listing.
          cache_hash=$(ls -1 .github_cache/ASPIRE-data/** | md5sum)
          echo "Computed cache hash: $cache_hash"
          # Expose the computed hash to subsequent steps/jobs.
          echo "cache_hash=${cache_hash}" >> $GITHUB_OUTPUT
      - name: Verify Cache Directory Before Saving
        run: |
          ls -lhR .github_cache/ASPIRE-data
          [ -f config.yaml ]
      - name: Save Cache
        uses: actions/cache@v4
        with:
          key: cached-data-${{ hashFiles('**/registry.py', '**/*workflow.yml') }}
          path: .github_cache/ASPIRE-data
          enableCrossOsArchive: true


  conda-build:
    needs: [check, data-cache]
    runs-on: ${{ matrix.os }}
    # Only run on review ready pull_requests
    if: ${{ github.event_name == 'push' && github.event.pull_request.draft == false }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, macOS-latest, macOS-13]
        backend: [default, openblas]
        python-version: ['3.9']
        include:
          - os: ubuntu-latest
            backend: intel
          - os: macOS-latest
            backend: accelerate
          - os: windows-2019
            backend: win64

    steps:
    - uses: actions/checkout@v4
    - name: Set up Conda ${{ matrix.os }} Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2.3.0
      with:
        miniconda-version: "latest"
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: aspire
        environment-file: environment-${{ matrix.backend }}.yml
        auto-activate-base: false
    - name: Complete Install and Log Environment ${{ matrix.os }} Python ${{ matrix.python-version }}
      run: |
        conda info
        conda list
        pip install -e ".[dev]"
        pip freeze
        python -c "import numpy; numpy.show_config()"
    - name: Restore Cache
      uses: actions/cache@v4
      with:
        key: cached-data-${{ hashFiles('**/registry.py', '**/*workflow.yml') }}
        restore-keys: |
          cached-data-
        path: .github_cache/ASPIRE-data
        enableCrossOsArchive: true
    - name: Set Cache Directory
      run: |
        echo "cache:" > config.yaml
        echo "    cache_dir: .github_cache/ASPIRE-data" >> config.yaml
    - name: Execute Pytest Conda ${{ matrix.os }} Python ${{ matrix.python-version }}
      run: |
        export ASPIREDIR=.
        export OMP_NUM_THREADS=2
        # -n runs test in parallel using pytest-xdist
        pytest -n2 --durations=50 -s
name: ASPIRE Python Pip CI

on:
  - push
  - pull_request

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Run Tox Check
      run: tox -e check

  build:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        pyenv: [stable, dev]
        exclude:
          # Exclude 3.7-stable so we can add pre and post tasks to that environment.
          - python-version: '3.7'
            pyenv: stable
        include:
          # Re-include 3.7-stable with additional tox tasks.
          - python-version: '3.7'
            pyenv: stable,docs


    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.pyenv }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox --skip-missing-interpreters false -e py${{ matrix.python-version }}-${{ matrix.pyenv }}
    - name: Upload Coverage to CodeCov
      uses: codecov/codecov-action@v3


  docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    - name: Run Sphinx doc build script
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: "docs/buildsite.sh"
      shell: bash

  ampere_gpu:
    needs: check
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,gpu_11x]"
    - name: Customize config
      run: |
        echo "Setup tmp dirs and chmod so others can cleanup."
        CI_TMP_DIR=/var/ci/tmp
        mkdir -p ${CI_TMP_DIR}
        chmod g+rwx  ${CI_TMP_DIR}
        echo "Create and assign a unique temp dir to hold our config."
        WORK_DIR=$(mktemp -d -p "${CI_TMP_DIR}")
        echo "WORK_DIR=${WORK_DIR}"
        echo "Stash the WORK_DIR to GitHub env so we can clean it up later."
        echo "WORK_DIR=${WORK_DIR}" >> $GITHUB_ENV
        echo -e "ray:\n    temp_dir: ${WORK_DIR}\n" > ${WORK_DIR}/config.yaml
        echo "Log the config: ${WORK_DIR}/config.yaml"
        cat ${WORK_DIR}/config.yaml
    - name: Run
      run: |
        ASPIREDIR=${{ env.WORK_DIR }} python -c \
        "import aspire; print(aspire.config['ray']['temp_dir'])"
        ASPIREDIR=${{ env.WORK_DIR }} pytest --durations=50
    - name: Cleanup
      run: rm -rf ${{ env.WORK_DIR }}


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/tutorials/generating_volume_projections.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_tutorials_generating_volume_projections.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_tutorials_generating_volume_projections.py:


Generating 3D Volume Projections
================================

This script illustrates using ASPIRE's Simulation source to
generate projections of a Volume using prescribed rotations.

.. GENERATED FROM PYTHON SOURCE LINES 9-19

.. code-block:: Python


    import os

    import numpy as np

    from aspire.noise import WhiteNoiseAdder
    from aspire.source.simulation import Simulation
    from aspire.utils import Rotation
    from aspire.volume import Volume








.. GENERATED FROM PYTHON SOURCE LINES 20-22

Configure how many images we'd like to project
----------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: Python

    n_img = 10








.. GENERATED FROM PYTHON SOURCE LINES 25-28

Load our Volume data
--------------------
This example starts with an mrc, which can be loaded as an ASPIRE Volume.

.. GENERATED FROM PYTHON SOURCE LINES 28-37

.. code-block:: Python


    file_path = os.path.join(
        os.path.dirname(os.getcwd()), "data", "clean70SRibosome_vol_65p.mrc"
    )
    v = Volume.load(file_path, dtype=np.float64)

    # Then we downsample to 60x60x60
    v.downsample(60)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1 float64 volumes arranged as a (1,) stack each of size 60x60x60.



.. GENERATED FROM PYTHON SOURCE LINES 38-41

Defining rotations
------------------
We generate a collection of in-plane rotations about the z-axis.

.. GENERATED FROM PYTHON SOURCE LINES 41-49

.. code-block:: Python


    # First get a list of angles to test
    thetas = np.linspace(0, 2 * np.pi, num=n_img, endpoint=False)

    # Instantiate ASPIRE's Rotation class with the set of angles.
    # This will allow us to use or access the rotations in a variety of ways.
    rots = Rotation.about_axis("z", thetas, dtype=np.float64)








.. GENERATED FROM PYTHON SOURCE LINES 50-53

Configure Noise
---------------
We can define controlled noise and have the Simulation apply it to our projection images.

.. GENERATED FROM PYTHON SOURCE LINES 53-60

.. code-block:: Python


    noise_variance = 1e-10  # Normally this would be derived from a desired SNR.

    # Then create a CustomNoiseAdder based on that variance, which is passed to Simulation.
    white_noise_adder = WhiteNoiseAdder(var=noise_variance)









.. GENERATED FROM PYTHON SOURCE LINES 61-63

Setup Simulation Source
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 63-82

.. code-block:: Python


    # Simulation will randomly shift and amplify images by default.
    # Instead we define the following parameters.
    shifts = np.zeros((n_img, 2))
    amplitudes = np.ones(n_img)

    # Create a Simulation Source object
    src = Simulation(
        vols=v,  # our Volume
        L=v.resolution,  # resolution, should match Volume
        n=n_img,  # number of projection images
        angles=rots.angles,  # pass our rotations as Euler angles
        offsets=shifts,  # translations (wrt to origin)
        amplitudes=amplitudes,  # amplification ( 1 is identity)
        seed=12345,  # RNG seed for reproducibility
        dtype=v.dtype,  # match our datatype to the Volume.
        noise_adder=white_noise_adder,  # optionally prescribe noise
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/sphinx_gallery/gen_rst.py:794: UserWarning: Gimbal lock detected. Setting third angle to zero since it is not possible to uniquely determine all angles.
      exec(self.code, self.fake_main.__dict__)




.. GENERATED FROM PYTHON SOURCE LINES 83-85

Yield projection images from the Simulation Source
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 85-99

.. code-block:: Python


    # Consume images from the source by providing
    # a starting index and number of images.
    # Here we generate the first 3 and peek at them.
    src.images[:3].show()
    src.projections[:3].show()

    # Here we return the first n_img images as a numpy array.
    dirty_ary = src.images[:n_img].asnumpy()

    # And we have access to the clean images
    clean_ary = src.projections[:n_img].asnumpy()

    # Similary, the angles/rotations/shifts/amplitudes etc.



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_tutorials/tutorials/images/sphx_glr_generating_volume_projections_001.png
         :alt: generating volume projections
         :srcset: /auto_tutorials/tutorials/images/sphx_glr_generating_volume_projections_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_tutorials/tutorials/images/sphx_glr_generating_volume_projections_002.png
         :alt: generating volume projections
         :srcset: /auto_tutorials/tutorials/images/sphx_glr_generating_volume_projections_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.850 seconds)


.. _sphx_glr_download_auto_tutorials_tutorials_generating_volume_projections.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: generating_volume_projections.ipynb <generating_volume_projections.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: generating_volume_projections.py <generating_volume_projections.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: generating_volume_projections.zip <generating_volume_projections.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

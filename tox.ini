[tox]
skip_missing_interpreters = true
envlist =
    clean
    check
    docs
    py{3.6,3.7,3.8,3.9}-{stable,dev}
minversion = 3.8.0

[testenv]
changedir = tests
deps =
    parameterized
    pytest
    pytest-cov
    Cython>=0.23
commands =
    python -V
    pip freeze
    python -c "import numpy; numpy.show_config()"
    # --cov should generate `Coverage` data
    pytest --cov=aspire --cov-report=xml {posargs}

[testenv:py{3.6,3.7,3.8,3.9}-dev]
whitelist_externals=
    sh
    cut
    xargs
changedir = tests
deps =
    parameterized
    pytest
    pytest-cov
    Cython>=0.23
commands =
    sh -c "pip freeze | cut -d@ -f1 | cut -d= -f1 | xargs -n1 pip install -U"
    python -V
    pip freeze
    python -c "import numpy; numpy.show_config()"
    # --cov should generate `Coverage` data
    pytest --cov=aspire --cov-report=xml {posargs}

[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinxcontrib-bibtex
    sphinx-rtd-theme
commands =
    sphinx-apidoc -f -o ./source ../src -H Modules

[testenv:check]
changedir = {toxinidir}
deps =
    black
    check-manifest
    flake8
    flake8-bugbear
    flake8-colors
    flake8-print
    # TODO, fix more flake8 issues
    # flake8-bandit
    # flake8-builtins
    # flake8-commas
    # flake8-comprehensions
    # flake8-docstrings
    # flake8-use-fstring
    # pep8-naming
    # TODO, add pydocstyle or equivalent
    isort
    twine
skip_install = true
commands =
    flake8 .
    isort --check-only --diff .
    black --check --diff .
    check-manifest .
    python setup.py sdist
    twine check dist/*.*

[flake8]
# The following for recomended for use with Black
max-line-length = 88
extend-ignore = E203, E501
per-file-ignores =
  __init__.py: F401

[isort]
default_section = THIRDPARTY
known_first_party = aspire
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
# The following is suggested for Black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88

[pytest]
testpaths = tests
markers =
    expensive: mark a test as a long running test.
addopts = -m "not expensive"

[gh-actions]
python =
    3.6: py3.6
    3.7: py3.7
    3.8: py3.8
    3.9: py3.9

[coverage:run]
relative_files = True
omit =
    */debug*.py
    # This is more/less a copy of scikit-learn's with minor changes.
    src/aspire/numeric/complex_pca/validation.py

[check-manifest]
ignore =
    debug*.py
